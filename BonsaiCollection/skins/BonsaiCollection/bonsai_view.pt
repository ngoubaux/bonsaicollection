<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">

  <head><title></title></head>

  <metal:javascript_head fill-slot="javascript_head_slot">
    <tal:block define="macro here/archetypes_custom_js/macros/javascript_head | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
    <tal:comment replace="nothing">
      Many of the following defines duplicated from the tal:defines in the
      main slot. With base_edit, edit_macros could be reused as it was defined
      for the entire document. base_view uses main_template and thus must
      create additional defines for each slot it fills.
    </tal:comment>
    <tal:js define="fields python:here.Schema().viewableFields(here);
                    js python:here.getUniqueWidgetAttr(fields, 'helper_js')"
            condition="js"
            repeat="item js">
      <script type="text/javascript"
              charset="iso-8859-1"
              tal:condition="python:exists('portal/%s' % item)"
              tal:attributes="src string:$portal_url/$item">
      </script>
    </tal:js>
    <tal:block define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
                       view_template python:'%s_view' % portal_type;
                       view_macros python:path('here/%s/macros|nothing' % view_template);
                       macro view_macros/js | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
  </metal:javascript_head>

  <metal:css fill-slot="css_slot">
    <tal:comment replace="nothing">
      Many of the following defines duplicated from the tal:defines in the
      main slot. With base_edit, edit_macros could be reused as it was defined
      for the entire document. base_view uses main_template and thus must
      create additional defines for each slot it fills.
    </tal:comment>
    <tal:css define="fields python:here.Schema().viewableFields(here);
                     css python:here.getUniqueWidgetAttr(fields, 'helper_css')"
             condition="css"
             repeat="item css">
      <style type="text/css"
             media="all"
             tal:condition="python:exists('portal/%s' % item)"
             tal:content="string:@import url($portal_url/$item);">
      </style>
      <style type="text/css" media="screen" tal:content="string:@import url($portal_url/bonsaicollection.css);"/>
    </tal:css>
    <tal:block define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
                       view_template python:'%s_view' % portal_type;
                       view_macros python:path('here/%s/macros|nothing' % view_template);
                       macro view_macros/css | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
  </metal:css>

  <body>
    <metal:fill fill-slot="main">
      <metal:main_macro define-macro="main"
            tal:define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
            base_macros here/base/macros;
            view_template python:'%s_view' % portal_type;
            view_macros python:path('here/%s/macros|nothing' % view_template);
            header_macro view_macros/header | header_macro | base_macros/header;
            body_macro view_macros/body | body_macro | base_macros/body;
            folderlisting_macro view_macros/folderlisting | folderlisting | base_macros/folderlisting;
            footer_macro view_macros/footer | footer_macro | base_macros/footer;            
            url here/absolute_url;
            errors python:request.get('errors', {});
            can_manage python: container.portal_membership.checkPermission('Modify portal content', here);
            encyclo python:here.getEncyclopedie();
            pots python:here/getPots()">

        <metal:use_header use-macro="header_macro" />
        <div i18n:domain="BonsaiCollection">
          <tal:define define="obj python:here.getPicture();">
           <tal:exist condition="obj">                                     
              <div class="bonsai-photo bonsai-picture-left">
                <a href="image.jpg" tal:attributes="href obj/absolute_url">
                  <span tal:replace="structure python:obj.tag(scale='preview')" tal:attributes="style string:width:200px" />
                </a>          
              </div>
            </tal:exist> 
            <div class="bonsai-photo-empty bonsai-picture-left" tal:condition="not:obj">
              <div class="bonsai-photo-empty-title"> no picture</div>
            </div>
          </tal:define>
          <div class="bonsai-photo bonsai-picture-right" tal:define="obj here/project|nothing">
            <tal:exist condition="obj">
              <a href="image.jpg" tal:attributes="href string:$url/project/image_view_fullscreen">
                <span tal:replace="structure here/project/project_normal"/>
              </a>
            </tal:exist>
            <tal:exist condition="not:obj">
              <div class="bonsai-photo-empty-title"> no picture</div>
            </tal:exist>
          </div>
          <div style="float: left;"
               tal:define="sp python:here.getReferenceImpl(relationship='is specie');               
                           pot python:here.getReferenceImpl(relationship='in container');">
            <b><span i18n:translate="BonsaiCollection_label_origin">origin</span>: </b><span metal:use-macro="python: here.widget('origin', mode='view')">origin</span><br/>
            
            <b><span i18n:translate="BonsaiCollection_label_species">species</span>: </b>            
            <span metal:use-macro="python: here.widget('species', mode='view')" tal:condition="sp">species</span>
              <tal:species condition="not: sp"
                           define="encyclourl encyclo/absolute_url">
                <a href="" tal:attributes="href string:${encyclourl}">Ajouter une fiche esp&egrave;ce</a>
              </tal:species>
            <br/>            
            
            <b><span i18n:translate="BonsaiCollection_label_container">container</span>: </b>
            <span metal:use-macro="python: here.widget('container', mode='view')">container</span>
            <tal:pot condition="not: pot">
                 <a href="" tal:attributes="href string:${potsurl}/createObject?type_name=Container" 
                            tal:condition="potsurl" 
                            tal:define="potsurl pots/absolute_url|nothing">Ajouter un pot</a>
            </tal:pot>
            <br/>
            <b><span i18n:translate="BonsaiCollection_label_treestyles">treestyles</span>: </b><span metal:use-macro="python: here.widget('treestyles', mode='view')">treestyles</span><br/>
            <b><span i18n:translate="BonsaiCollection_label_acquiredDate">Date d'acquisition</span>: </b><span metal:use-macro="python: here.widget('acquiredDate', mode='view')">Date</span><br/>            
          </div>
          <div class="visualClear"></div><br/>
          <b><span i18n:translate="BonsaiCollection_label_remark">Remark</span>: </b><span metal:use-macro="python: here.widget('remark', mode='view')">remark</span><br/>          
          <br/><br/><br/>
          <metal:use_work use-macro="context/bonsaiwork_macro/macros/portlet" />
          <metal:use_work use-macro="context/bonsaiblight_macro/macros/portlet" />
          <metal:use_work use-macro="context/bonsaidimension_macro/macros/portlet" />       
          <metal:use_work use-macro="context/bonsaiphoto_macro/macros/portlet" />
          <div class="visualClear"></div>
        </div>
        <metal:use_footer use-macro="footer_macro" />

      </metal:main_macro>
    </metal:fill>
  </body>
</html>
